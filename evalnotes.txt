Testing Notes:

For help:
python3 eval_ssd.py --help

EVAL_PATH=jetson-inference/python/training/detection/ssd

MODELPATH=jetson-inference/python/training/detection/ssd/models/fruit1000_3

DATAPATH=jetson-inference/python/training/detection/ssd/data/fruit1000

LABELPATH=jetson-inference/python/training/detection/ssd/models/fruit1000_3

python3 $EVAL_PATH/eval_ssd.py --net=mb1-ssd --trained_model=$MODELPATH/ssd-mobilenet.onnx --dataset_type=open_images --dataset=$DATAPATH --label_file=$LABELPATH/labels.txt

For Small Penguin:

EVAL_PATH=jetson-inference/python/training/detection/ssd/eval_ssd.py

MODELPATH=jetson-inference/python/training/detection/ssd/models/whale3

DATAPATH=jetson-inference/python/training/detection/ssd/data/smallpenguin

LABELPATH=jetson-inference/python/training/detection/ssd/models/mydata

python3 jetson-inference/python/training/detection/ssd/eval_ssd.py --net=mb1-ssd --trained_model=$MODELPATH/mb1-ssd-Epoch-1-Loss-8.148975276947022.pth --dataset_type=voc --dataset=$DATAPATH --label_file=$LABELPATH/labels.txt


Tester:
EVAL_PATH=jetson-inference/python/training/detection/ssd/eval_ssd_copy.py

MODELPATH=/home/james/findingfauna_model_488/mb1-ssd-Epoch-0-Loss-7.609527538220088.pth

DATAPATH=/home/james/findingfauna_data_488/pascal/

LABELPATH=/home/james/findingfauna_model_488/10-100/labels.txt

EVALPATH=/home/james/findingfauna_model_488/model_evaluation/test/

python3 $EVAL_PATH --net=mb1-ssd --trained_model=$MODELPATH --dataset_type=voc --dataset=$DATAPATH --label_file=$LABELPATH --eval_dir=$EVALPATH

For Un-Sorted:

EVAL_PATH=/home/james/jetson-inference/python/training/detection/ssd/eval_ssd.py
MODELPATH=/home/james/whale_from_above_model_bilateral_unsorted/mb1-ssd-Epoch-99-Loss-41.910604520277545.pth
DATAPATH=/home/james/whale_for_preprcessing/output_15:04:2021_18:42:46/no_noise/
LABELPATH=/home/james/whale_from_above_model_bilateral_sorted/labels.txt
EVALPATH=/home/james/whale_from_above_model_bilateral_unsorted/evaloutput/

python3 $EVAL_PATH --net=mb1-ssd --trained_model=$MODELPATH --dataset_type=voc --dataset=$DATAPATH --label_file=$LABELPATH --eval_dir=$EVALPATH

get LABELPATH a text fule

usage: eval_ssd.py [-h] [--net NET] [--trained_model TRAINED_MODEL]
                   [--dataset_type DATASET_TYPE] [--dataset DATASET]
                   [--label_file LABEL_FILE] [--use_cuda USE_CUDA]
                   [--use_2007_metric USE_2007_METRIC]
                   [--nms_method NMS_METHOD] [--iou_threshold IOU_THRESHOLD]
                   [--eval_dir EVAL_DIR] [--mb2_width_mult MB2_WIDTH_MULT]

SSD Evaluation on VOC Dataset.

optional arguments:
  -h, --help            show this help message and exit
  --net NET             The network architecture, it should be of mb1-ssd,
                        mb1-ssd-lite, mb2-ssd-lite or vgg16-ssd.
  --trained_model TRAINED_MODEL
  --dataset_type DATASET_TYPE
                        Specify dataset type. Currently support voc and
                        open_images.
  --dataset DATASET     The root directory of the VOC dataset or Open Images
                        dataset.
  --label_file LABEL_FILE
                        The label file path.
  --use_cuda USE_CUDA
  --use_2007_metric USE_2007_METRIC
  --nms_method NMS_METHOD
  --iou_threshold IOU_THRESHOLD
                        The threshold of Intersection over Union.
  --eval_dir EVAL_DIR   The directory to store evaluation results.
  --mb2_width_mult MB2_WIDTH_MULT
                        Width Multiplifier for MobilenetV2

